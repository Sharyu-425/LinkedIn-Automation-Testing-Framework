package com.setup;

import java.time.Duration;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.edge.EdgeDriver;
import org.openqa.selenium.edge.EdgeOptions;

import com.parameters.ConfigReader;

import io.cucumber.java.After;
import io.cucumber.java.Before;
import io.github.bonigarcia.wdm.WebDriverManager;

public class BaseSteps {
	public static WebDriver driver;
//	public static ChromeOptions coptions;
//	public static EdgeOptions eoptions;
	
	
	
	@Before
	public void setup(String browser) {
		String url = ConfigReader.getProperty("url");
		Boolean maximize = Boolean.parseBoolean(ConfigReader.getProperty("start-Maximized"));
		Boolean disableNotif = Boolean.parseBoolean(ConfigReader.getProperty("disable-notification"));
		
		switch(browser.toLowerCase()) {
		
		case "chrome":
			WebDriverManager.chromedriver().setup();
			ChromeOptions chromeOptions = new ChromeOptions();
			
			if(maximize) {
				chromeOptions.addArguments("--start-maximize");
			}
			if(disableNotif) {
				chromeOptions.addArguments("disable-notification");
			}
			driver=new ChromeDriver(chromeOptions);
			break;
			
			
		case"edge":
			
			WebDriverManager.edgedriver().setup();
			driver=new EdgeDriver();
			if(maximize) {
				driver.manage().window().maximize();
			}
			break;
			
//		default:  // if nothing is there of it is 
//			//       unable to read and perform default is set to chrome.
//			WebDriverManager.chromedriver().setup();
//			ChromeOptions defaultChromeOptions = new ChromeOptions();
//			
//			if(maximize) {
//				defaultChromeOptions.addArguments("disable-notification");
//			}
//			if(disableNotif) {
//				defaultChromeOptions.addArguments("start-maximize");
//			}
//			driver=new ChromeDriver(defaultChromeOptions);
//			break;
		}
	driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
	driver.get(url);
	}
	
	
	@After
	public void tearDown() {
		if(driver!=null) {
			driver.quit();
		}
	}
	
	
}
